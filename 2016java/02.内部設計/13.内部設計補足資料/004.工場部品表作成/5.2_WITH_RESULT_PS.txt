,RESULT 
(
	SUB_PARTS_NO,
	PARENT_PARTS_NO,
	PS_REV_NO,
	FACTORY_PS_REV_NO,
	FACTORY_PS_STATUS,
	APPROVED_DATE,
	APPROVER_USER_ID,
	EDITOR_USER_ID,
	ADOPT_DATE,
	ABOLISH_DATE,
	TMP_REGIST_DATE,
	PENDING_DECIDED_DATE,
	CONSUMPTION_ROUTING,
	PROCESSING_CODE,
	MANAGEMENT_STATUS,
	SUPPLY_CODE,
	SHIP_SUPPLY_CLASS,
	ADOPT_CHECK_CODE,
	UNIT_CLASS,
	DATA_CHECK_RESULT,
	REPR_OF_MAIN_ECS_NO,
	SKIP_FLAG,
	CANCEL_FLAG,
	ENGINEERING_PS_REV_NO,
	TMP_ABOLISH_DATE,
	TMP_CANCEL_FLAG,
	REMARKS,
	CREATED_USER_ID,
	CREATED_APP_EVENT_ID,
	CREATED_TIMESTAMP,
	UPDATED_USER_ID,
	UPDATED_APP_EVENT_ID,
	UPDATED_TIMESTAMP
) AS
(
	SELECT
		SUB_PARTS_NO,
		PARENT_PARTS_NO,
		PS_REV_NO,
		FACTORY_PS_REV_NO,
		FACTORY_PS_STATUS,
		APPROVED_DATE,
		APPROVER_USER_ID,
		EDITOR_USER_ID,
		ADOPT_DATE,
		ABOLISH_DATE,
		TMP_REGIST_DATE,
		PENDING_DECIDED_DATE,
		CONSUMPTION_ROUTING,
		PROCESSING_CODE,
		MANAGEMENT_STATUS,
		SUPPLY_CODE,
		SHIP_SUPPLY_CLASS,
		ADOPT_CHECK_CODE,
		UNIT_CLASS,
		DATA_CHECK_RESULT,
		REPR_OF_MAIN_ECS_NO,
		SKIP_FLAG,
		CANCEL_FLAG,
		ENGINEERING_PS_REV_NO,
		TMP_ABOLISH_DATE,
		TMP_CANCEL_FLAG,
		REMARKS,
		CREATED_USER_ID,
		CREATED_APP_EVENT_ID,
		CREATED_TIMESTAMP,
		UPDATED_USER_ID,
		UPDATED_APP_EVENT_ID,
		UPDATED_TIMESTAMP
	FROM
		(
			SELECT
				MSTRC.SUB_PARTS_NO,
				MSTRC.PARENT_PARTS_NO,
				MSTRC.PS_REV_NO,
				MSTRC.FACTORY_PS_REV_NO,
				MSTRC.FACTORY_PS_STATUS,
				MSTRC.APPROVED_DATE,
				MSTRC.APPROVER_USER_ID,
				MSTRC.EDITOR_USER_ID,
				MSTRC.ADOPT_DATE,
				MSTRC.ABOLISH_DATE,
				MSTRC.TMP_REGIST_DATE,
				MSTRC.PENDING_DECIDED_DATE,
				MSTRC.CONSUMPTION_ROUTING,
				MSTRC.PROCESSING_CODE,
				MSTRC.MANAGEMENT_STATUS,
				MSTRC.SUPPLY_CODE,
				MSTRC.SHIP_SUPPLY_CLASS,
				MSTRC.ADOPT_CHECK_CODE,
				MSTRC.UNIT_CLASS,
				MSTRC.DATA_CHECK_RESULT,
				MSTRC.REPR_OF_MAIN_ECS_NO,
				MSTRC.SKIP_FLAG,
				MSTRC.CANCEL_FLAG,
				MSTRC.ENGINEERING_PS_REV_NO,
				MSTRC.TMP_ABOLISH_DATE,
				MSTRC.TMP_CANCEL_FLAG,
				MSTRC.REMARKS,
				MSTRC.CREATED_USER_ID,
				MSTRC.CREATED_APP_EVENT_ID,
				MSTRC.CREATED_TIMESTAMP,
				MSTRC.UPDATED_USER_ID,
				MSTRC.UPDATED_APP_EVENT_ID,
				MSTRC.UPDATED_TIMESTAMP,
				MPRT1.JOB_SEQ_NO
			FROM
				TB004002 MSTRC
					/* 結合グループ2 : 正展開した子PNの属性を表示するための情報 */
					LEFT OUTER JOIN TB004001 MPRT1 ON											/* 工場部品情報(子PNとしての工場部品情報) */
						MPRT1.PARTS_NO=MSTRC.SUB_PARTS_NO AND
						EXISTS
						(
							SELECT					/* 1.PSと採廃期間が重複しているもの, 2.工場ステータスが大きいもの, 3.最大の技術部品改訂 + 工場部品改訂 の順で最も優先度の高いデータを取得 */
								MAX(
										CASE WHEN
											MSTRC.ADOPT_DATE < DECODE(MSTRC.FACTORY_PS_STATUS, CAST(:STATUS AS CHAR(2)), DECODE(MPRT2.FACTORY_PN_STATUS, CAST(:STATUS AS CHAR(2)), MPRT2.ABOLISH_DATE, MPRT2.TMP_ABOLISH_DATE), MPRT2.TMP_ABOLISH_DATE) AND
											DECODE(MSTRC.FACTORY_PS_STATUS, CAST(:STATUS AS CHAR(2)), MSTRC.ABOLISH_DATE, MSTRC.TMP_ABOLISH_DATE) <  MPRT2.ADOPT_DATE THEN '1' /* 採廃期間が重複している */
											ELSE '0' /* 採廃期間が重複していない */
										END || MPRT2.FACTORY_PN_STATUS || MPRT2.ENGINEERING_PN_REV_NO || MPRT2.FACTORY_PN_REV_NO
									)
							FROM
								TB004001 MPRT2
							WHERE
								MPRT2.PARTS_NO=MPRT1.PARTS_NO AND
								MPRT2.CANCEL_FLAG='0' AND																									/* 無効フラグが「有効」(子PNは常に有効なデータのみ取得する) */
								(MPRT2.FACTORY_PN_STATUS=:STATUS AND MPRT2.ADOPT_DATE <= CAST(:DATE AS DATE) AND MPRT2.ABOLISH_DATE > CAST(:DATE AS DATE))	/* ◇過去履歴指定時に指定する日付条件。本登録済のみ表示する。ブランクの場合はこの条件を除外する */
							GROUP BY
								MPRT2.PARTS_NO
							HAVING
								(MPRT1.ENGINEERING_PN_REV_NO || MPRT1.FACTORY_PN_REV_NO)=
								RIGHT(MAX(
										CASE WHEN
											MSTRC.ADOPT_DATE < DECODE(MSTRC.FACTORY_PS_STATUS, :STATUS, DECODE(MPRT2.FACTORY_PN_STATUS, :STATUS, MPRT2.ABOLISH_DATE, MPRT2.TMP_ABOLISH_DATE), MPRT2.TMP_ABOLISH_DATE) AND
											DECODE(MSTRC.FACTORY_PS_STATUS, :STATUS, MSTRC.ABOLISH_DATE, MSTRC.TMP_ABOLISH_DATE) <  MPRT2.ADOPT_DATE THEN '1' 				/* 採廃期間が重複している */
											ELSE '0' 																															/* 採廃期間が重複していない */
										END || MPRT2.FACTORY_PN_STATUS || MPRT2.ENGINEERING_PN_REV_NO || MPRT2.FACTORY_PN_REV_NO
										)
									, 6)
						)
			WHERE
				EXISTS
				(
					SELECT
						*
					FROM
						TEMP 																															/* 部品構成展開結果 */
					WHERE
						TEMP.PARPRTNO=MSTRC.PARENT_PARTS_NO AND
						TEMP.PRTNO=MSTRC.SUB_PARTS_NO
				)
		) 
	WHERE
		CANCEL_FLAG='0' AND																														/* 無効フラグが「有効」 */
		(FACTORY_PS_STATUS!=:STATUS OR ABOLISH_DATE > CAST(:TODAY AS DATE)) AND																	/* ◎本登録済みではないか、または過去廃止ではないデータ。マスクがOFFになった際には、この条件を除外する */
		(FACTORY_PS_STATUS=:STATUS AND ADOPT_DATE <= CAST(:DATE AS DATE) AND ABOLISH_DATE > CAST(:DATE AS DATE)) AND							/* ◇過去履歴指定時に指定する日付条件。本登録済のみ表示する。ブランクの場合はこの条件を除外する */
		PROCESSING_CODE=:PRCS_CD AND																											/* ▼加工区分の指定 */
		CONSUMPTION_ROUTING=:CONS_RTNG AND																										/* □消費工順の指定 */
		JOB_SEQ_NO=:JOB_SEQ AND																													/* ◆発生工順の指定 */
		PROCESSING_CODE NOT IN ('9','R','Z') 																									/* ◎非移動単位は除外。マスクがOFFになった際には、この条件を除外する */
	UNION ALL																																	/* ◎無効フラグが「無効」のデータも取得する。マスクがOFFになった際には、UNION ALL以下のSELECT文を除外する */
	SELECT
		MSTRC.SUB_PARTS_NO, 
		MSTRC.PARENT_PARTS_NO,
		MSTRC.PS_REV_NO,
		MSTRC.FACTORY_PS_REV_NO,
		MSTRC.FACTORY_PS_STATUS,
		MSTRC.APPROVED_DATE,
		MSTRC.APPROVER_USER_ID,
		MSTRC.EDITOR_USER_ID,
		MSTRC.ADOPT_DATE,
		MSTRC.ABOLISH_DATE,
		MSTRC.TMP_REGIST_DATE,
		MSTRC.PENDING_DECIDED_DATE,
		MSTRC.CONSUMPTION_ROUTING,
		MSTRC.PROCESSING_CODE,
		MSTRC.MANAGEMENT_STATUS,
		MSTRC.SUPPLY_CODE,
		MSTRC.SHIP_SUPPLY_CLASS,
		MSTRC.ADOPT_CHECK_CODE,
		MSTRC.UNIT_CLASS,
		MSTRC.DATA_CHECK_RESULT,
		MSTRC.REPR_OF_MAIN_ECS_NO,
		MSTRC.SKIP_FLAG,
		MSTRC.CANCEL_FLAG,
		MSTRC.ENGINEERING_PS_REV_NO,
		MSTRC.TMP_ABOLISH_DATE,
		MSTRC.TMP_CANCEL_FLAG,
		MSTRC.REMARKS,
		MSTRC.CREATED_USER_ID,
		MSTRC.CREATED_APP_EVENT_ID,
		MSTRC.CREATED_TIMESTAMP,
		MSTRC.UPDATED_USER_ID,
		MSTRC.UPDATED_APP_EVENT_ID,
		MSTRC.UPDATED_TIMESTAMP
	FROM
		TB004002 MSTRC,
		RESULT 
	WHERE
		MSTRC.PARENT_PARTS_NO=RESULT.PARENT_PARTS_NO AND
		MSTRC.SUB_PARTS_NO=RESULT.SUB_PARTS_NO AND
		MSTRC.PS_REV_NO=RESULT.PS_REV_NO AND
		MSTRC.FACTORY_PS_REV_NO=LTRIM(TO_CHAR(RESULT.FACTORY_PS_REV_NO - 1, '000')) AND
		MSTRC.CANCEL_FLAG='1' 											/* 無効フラグが「無効」 */
)
